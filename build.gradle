plugins {
	id 'java-library'
	id 'maven-publish'
	alias libs.plugins.org.springframework.boot //apply false
	alias libs.plugins.io.spring.dependency.management
}

version = findProperty('starter-version') ?: '0.0.0-SNAPSHOT'
group = 'com.example.hivemq.boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

dependencyManagement {
	imports {
		mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
	}
}

repositories {
	mavenCentral()
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {
	implementation libs.org.springframework.boot.starter
	implementation libs.org.springframework.boot.starter.validation
	implementation libs.com.fasterxml.jackson.dataformat.xml

	api libs.com.hivemq.community.edition.embedded

	// Needed for backwards compatibility for hivemq config file reading ...
//	implementation libs.bundles.jaxb.legacy

	annotationProcessor libs.bundles.annotation.processors

	testImplementation libs.org.springframework.boot.starter.test
	testRuntimeOnly libs.junit.platform.launcher
}

tasks.named("jar") {
	manifest {
		attributes 'HiveMQ-Version': libs.versions.hivemq.getVersion().get()
	}
}

springBoot {
	buildInfo {
		properties {
			additional = [
					'hivemq-ce': libs.versions.hivemq.getVersion().get(),
					'spring-boot': libs.versions.spring.boot.getVersion().get()
			]
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

publishing {
	publications {
		starter(MavenPublication) {
			from components.java
		}
	}

	repositories {
		mavenLocal()
	}
}
